use crate::lazy::*;
use crate::*;
use libloading::{Error, Library};
use std::os::raw::*;

#[rustfmt::skip]
pub struct XcbRes {
    pub(crate) lib: NamedLibrary,
    pub(crate) xcb_res_client_end: LazySymbol<unsafe fn(i: *mut xcb_res_client_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_client_id_spec_end: LazySymbol<unsafe fn(i: *mut xcb_res_client_id_spec_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_client_id_spec_next: LazySymbol<unsafe fn(i: *mut xcb_res_client_id_spec_iterator_t)>,
    pub(crate) xcb_res_client_id_value_end: LazySymbol<unsafe fn(i: *mut xcb_res_client_id_value_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_client_id_value_next: LazySymbol<unsafe fn(i: *mut xcb_res_client_id_value_iterator_t)>,
    pub(crate) xcb_res_client_id_value_value: LazySymbol<unsafe fn(R: *const xcb_res_client_id_value_t) -> *mut u32>,
    pub(crate) xcb_res_client_id_value_value_end: LazySymbol<unsafe fn(R: *const xcb_res_client_id_value_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_client_id_value_value_length: LazySymbol<unsafe fn(R: *const xcb_res_client_id_value_t) -> c_int>,
    pub(crate) xcb_res_client_next: LazySymbol<unsafe fn(i: *mut xcb_res_client_iterator_t)>,
    pub(crate) xcb_res_id: LazySymbol<*mut xcb_extension_t>,
    pub(crate) xcb_res_query_client_ids: LazySymbol<unsafe fn(c: *mut xcb_connection_t, num_specs: u32, specs: *const xcb_res_client_id_spec_t) -> xcb_res_query_client_ids_cookie_t>,
    pub(crate) xcb_res_query_client_ids_ids_iterator: LazySymbol<unsafe fn(R: *const xcb_res_query_client_ids_reply_t) -> xcb_res_client_id_value_iterator_t>,
    pub(crate) xcb_res_query_client_ids_ids_length: LazySymbol<unsafe fn(R: *const xcb_res_query_client_ids_reply_t) -> c_int>,
    pub(crate) xcb_res_query_client_ids_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_client_ids_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_client_ids_reply_t>,
    pub(crate) xcb_res_query_client_ids_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, num_specs: u32, specs: *const xcb_res_client_id_spec_t) -> xcb_res_query_client_ids_cookie_t>,
    pub(crate) xcb_res_query_client_pixmap_bytes: LazySymbol<unsafe fn(c: *mut xcb_connection_t, xid: u32) -> xcb_res_query_client_pixmap_bytes_cookie_t>,
    pub(crate) xcb_res_query_client_pixmap_bytes_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_client_pixmap_bytes_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_client_pixmap_bytes_reply_t>,
    pub(crate) xcb_res_query_client_pixmap_bytes_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, xid: u32) -> xcb_res_query_client_pixmap_bytes_cookie_t>,
    pub(crate) xcb_res_query_client_resources: LazySymbol<unsafe fn(c: *mut xcb_connection_t, xid: u32) -> xcb_res_query_client_resources_cookie_t>,
    pub(crate) xcb_res_query_client_resources_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_client_resources_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_client_resources_reply_t>,
    pub(crate) xcb_res_query_client_resources_types: LazySymbol<unsafe fn(R: *const xcb_res_query_client_resources_reply_t) -> *mut xcb_res_type_t>,
    pub(crate) xcb_res_query_client_resources_types_iterator: LazySymbol<unsafe fn(R: *const xcb_res_query_client_resources_reply_t) -> xcb_res_type_iterator_t>,
    pub(crate) xcb_res_query_client_resources_types_length: LazySymbol<unsafe fn(R: *const xcb_res_query_client_resources_reply_t) -> c_int>,
    pub(crate) xcb_res_query_client_resources_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, xid: u32) -> xcb_res_query_client_resources_cookie_t>,
    pub(crate) xcb_res_query_clients: LazySymbol<unsafe fn(c: *mut xcb_connection_t) -> xcb_res_query_clients_cookie_t>,
    pub(crate) xcb_res_query_clients_clients: LazySymbol<unsafe fn(R: *const xcb_res_query_clients_reply_t) -> *mut xcb_res_client_t>,
    pub(crate) xcb_res_query_clients_clients_iterator: LazySymbol<unsafe fn(R: *const xcb_res_query_clients_reply_t) -> xcb_res_client_iterator_t>,
    pub(crate) xcb_res_query_clients_clients_length: LazySymbol<unsafe fn(R: *const xcb_res_query_clients_reply_t) -> c_int>,
    pub(crate) xcb_res_query_clients_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_clients_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_clients_reply_t>,
    pub(crate) xcb_res_query_clients_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t) -> xcb_res_query_clients_cookie_t>,
    pub(crate) xcb_res_query_resource_bytes: LazySymbol<unsafe fn(c: *mut xcb_connection_t, client: u32, num_specs: u32, specs: *const xcb_res_resource_id_spec_t) -> xcb_res_query_resource_bytes_cookie_t>,
    pub(crate) xcb_res_query_resource_bytes_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_resource_bytes_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_resource_bytes_reply_t>,
    pub(crate) xcb_res_query_resource_bytes_sizes_iterator: LazySymbol<unsafe fn(R: *const xcb_res_query_resource_bytes_reply_t) -> xcb_res_resource_size_value_iterator_t>,
    pub(crate) xcb_res_query_resource_bytes_sizes_length: LazySymbol<unsafe fn(R: *const xcb_res_query_resource_bytes_reply_t) -> c_int>,
    pub(crate) xcb_res_query_resource_bytes_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, client: u32, num_specs: u32, specs: *const xcb_res_resource_id_spec_t) -> xcb_res_query_resource_bytes_cookie_t>,
    pub(crate) xcb_res_query_version: LazySymbol<unsafe fn(c: *mut xcb_connection_t, client_major: u8, client_minor: u8) -> xcb_res_query_version_cookie_t>,
    pub(crate) xcb_res_query_version_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_res_query_version_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_res_query_version_reply_t>,
    pub(crate) xcb_res_query_version_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, client_major: u8, client_minor: u8) -> xcb_res_query_version_cookie_t>,
    pub(crate) xcb_res_resource_id_spec_end: LazySymbol<unsafe fn(i: *mut xcb_res_resource_id_spec_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_resource_id_spec_next: LazySymbol<unsafe fn(i: *mut xcb_res_resource_id_spec_iterator_t)>,
    pub(crate) xcb_res_resource_size_spec_end: LazySymbol<unsafe fn(i: *mut xcb_res_resource_size_spec_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_resource_size_spec_next: LazySymbol<unsafe fn(i: *mut xcb_res_resource_size_spec_iterator_t)>,
    pub(crate) xcb_res_resource_size_value_cross_references: LazySymbol<unsafe fn(R: *const xcb_res_resource_size_value_t) -> *mut xcb_res_resource_size_spec_t>,
    pub(crate) xcb_res_resource_size_value_cross_references_iterator: LazySymbol<unsafe fn(R: *const xcb_res_resource_size_value_t) -> xcb_res_resource_size_spec_iterator_t>,
    pub(crate) xcb_res_resource_size_value_cross_references_length: LazySymbol<unsafe fn(R: *const xcb_res_resource_size_value_t) -> c_int>,
    pub(crate) xcb_res_resource_size_value_end: LazySymbol<unsafe fn(i: *mut xcb_res_resource_size_value_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_resource_size_value_next: LazySymbol<unsafe fn(i: *mut xcb_res_resource_size_value_iterator_t)>,
    pub(crate) xcb_res_type_end: LazySymbol<unsafe fn(i: *mut xcb_res_type_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_res_type_next: LazySymbol<unsafe fn(i: *mut xcb_res_type_iterator_t)>,
}
