use crate::ffi::*;
use crate::lazy::*;
use libloading::{Error, Library};
use std::os::raw::*;

#[rustfmt::skip]
pub struct XcbDri2 {
    pub(crate) lib: NamedLibrary,
    pub(crate) xcb_dri2_attach_format_end: LazySymbol<unsafe fn(i: *mut xcb_dri2_attach_format_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_dri2_attach_format_next: LazySymbol<unsafe fn(i: *mut xcb_dri2_attach_format_iterator_t)>,
    pub(crate) xcb_dri2_authenticate: LazySymbol<unsafe fn(c: *mut xcb_connection_t, window: xcb_window_t, magic: u32) -> xcb_dri2_authenticate_cookie_t>,
    pub(crate) xcb_dri2_authenticate_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_authenticate_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_authenticate_reply_t>,
    pub(crate) xcb_dri2_authenticate_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, window: xcb_window_t, magic: u32) -> xcb_dri2_authenticate_cookie_t>,
    pub(crate) xcb_dri2_connect: LazySymbol<unsafe fn(c: *mut xcb_connection_t, window: xcb_window_t, driver_type: u32) -> xcb_dri2_connect_cookie_t>,
    pub(crate) xcb_dri2_connect_alignment_pad: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> *mut c_void>,
    pub(crate) xcb_dri2_connect_alignment_pad_end: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_dri2_connect_alignment_pad_length: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> c_int>,
    pub(crate) xcb_dri2_connect_device_name: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> *mut c_char>,
    pub(crate) xcb_dri2_connect_device_name_end: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_dri2_connect_device_name_length: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> c_int>,
    pub(crate) xcb_dri2_connect_driver_name: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> *mut c_char>,
    pub(crate) xcb_dri2_connect_driver_name_end: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_dri2_connect_driver_name_length: LazySymbol<unsafe fn(R: *const xcb_dri2_connect_reply_t) -> c_int>,
    pub(crate) xcb_dri2_connect_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_connect_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_connect_reply_t>,
    pub(crate) xcb_dri2_connect_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, window: xcb_window_t, driver_type: u32) -> xcb_dri2_connect_cookie_t>,
    pub(crate) xcb_dri2_copy_region: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, region: u32, dest: u32, src: u32) -> xcb_dri2_copy_region_cookie_t>,
    pub(crate) xcb_dri2_copy_region_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_copy_region_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_copy_region_reply_t>,
    pub(crate) xcb_dri2_copy_region_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, region: u32, dest: u32, src: u32) -> xcb_dri2_copy_region_cookie_t>,
    pub(crate) xcb_dri2_create_drawable: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_create_drawable_checked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_destroy_drawable: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_destroy_drawable_checked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_dri2_buffer_end: LazySymbol<unsafe fn(i: *mut xcb_dri2_dri2_buffer_iterator_t) -> xcb_generic_iterator_t>,
    pub(crate) xcb_dri2_dri2_buffer_next: LazySymbol<unsafe fn(i: *mut xcb_dri2_dri2_buffer_iterator_t)>,
    pub(crate) xcb_dri2_get_buffers: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, count: u32, attachments_len: u32, attachments: *const u32) -> xcb_dri2_get_buffers_cookie_t>,
    pub(crate) xcb_dri2_get_buffers_buffers: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_reply_t) -> *mut xcb_dri2_dri2_buffer_t>,
    pub(crate) xcb_dri2_get_buffers_buffers_iterator: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_reply_t) -> xcb_dri2_dri2_buffer_iterator_t>,
    pub(crate) xcb_dri2_get_buffers_buffers_length: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_reply_t) -> c_int>,
    pub(crate) xcb_dri2_get_buffers_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_get_buffers_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_get_buffers_reply_t>,
    pub(crate) xcb_dri2_get_buffers_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, count: u32, attachments_len: u32, attachments: *const u32) -> xcb_dri2_get_buffers_cookie_t>,
    pub(crate) xcb_dri2_get_buffers_with_format: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, count: u32, attachments_len: u32, attachments: *const xcb_dri2_attach_format_t) -> xcb_dri2_get_buffers_with_format_cookie_t>,
    pub(crate) xcb_dri2_get_buffers_with_format_buffers: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_with_format_reply_t) -> *mut xcb_dri2_dri2_buffer_t>,
    pub(crate) xcb_dri2_get_buffers_with_format_buffers_iterator: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_with_format_reply_t) -> xcb_dri2_dri2_buffer_iterator_t>,
    pub(crate) xcb_dri2_get_buffers_with_format_buffers_length: LazySymbol<unsafe fn(R: *const xcb_dri2_get_buffers_with_format_reply_t) -> c_int>,
    pub(crate) xcb_dri2_get_buffers_with_format_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_get_buffers_with_format_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_get_buffers_with_format_reply_t>,
    pub(crate) xcb_dri2_get_buffers_with_format_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, count: u32, attachments_len: u32, attachments: *const xcb_dri2_attach_format_t) -> xcb_dri2_get_buffers_with_format_cookie_t>,
    pub(crate) xcb_dri2_get_msc: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_dri2_get_msc_cookie_t>,
    pub(crate) xcb_dri2_get_msc_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_get_msc_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_get_msc_reply_t>,
    pub(crate) xcb_dri2_get_msc_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t) -> xcb_dri2_get_msc_cookie_t>,
    pub(crate) xcb_dri2_get_param: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, param: u32) -> xcb_dri2_get_param_cookie_t>,
    pub(crate) xcb_dri2_get_param_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_get_param_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_get_param_reply_t>,
    pub(crate) xcb_dri2_get_param_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, param: u32) -> xcb_dri2_get_param_cookie_t>,
    pub(crate) xcb_dri2_id: LazySymbol<*mut xcb_extension_t>,
    pub(crate) xcb_dri2_query_version: LazySymbol<unsafe fn(c: *mut xcb_connection_t, major_version: u32, minor_version: u32) -> xcb_dri2_query_version_cookie_t>,
    pub(crate) xcb_dri2_query_version_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_query_version_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_query_version_reply_t>,
    pub(crate) xcb_dri2_query_version_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, major_version: u32, minor_version: u32) -> xcb_dri2_query_version_cookie_t>,
    pub(crate) xcb_dri2_swap_buffers: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_msc_hi: u32, target_msc_lo: u32, divisor_hi: u32, divisor_lo: u32, remainder_hi: u32, remainder_lo: u32) -> xcb_dri2_swap_buffers_cookie_t>,
    pub(crate) xcb_dri2_swap_buffers_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_swap_buffers_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_swap_buffers_reply_t>,
    pub(crate) xcb_dri2_swap_buffers_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_msc_hi: u32, target_msc_lo: u32, divisor_hi: u32, divisor_lo: u32, remainder_hi: u32, remainder_lo: u32) -> xcb_dri2_swap_buffers_cookie_t>,
    pub(crate) xcb_dri2_swap_interval: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, interval: u32) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_swap_interval_checked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, interval: u32) -> xcb_void_cookie_t>,
    pub(crate) xcb_dri2_wait_msc: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_msc_hi: u32, target_msc_lo: u32, divisor_hi: u32, divisor_lo: u32, remainder_hi: u32, remainder_lo: u32) -> xcb_dri2_wait_msc_cookie_t>,
    pub(crate) xcb_dri2_wait_msc_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_wait_msc_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_wait_msc_reply_t>,
    pub(crate) xcb_dri2_wait_msc_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_msc_hi: u32, target_msc_lo: u32, divisor_hi: u32, divisor_lo: u32, remainder_hi: u32, remainder_lo: u32) -> xcb_dri2_wait_msc_cookie_t>,
    pub(crate) xcb_dri2_wait_sbc: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_sbc_hi: u32, target_sbc_lo: u32) -> xcb_dri2_wait_sbc_cookie_t>,
    pub(crate) xcb_dri2_wait_sbc_reply: LazySymbol<unsafe fn(c: *mut xcb_connection_t, cookie: xcb_dri2_wait_sbc_cookie_t, error: *mut *mut xcb_generic_error_t) -> *mut xcb_dri2_wait_sbc_reply_t>,
    pub(crate) xcb_dri2_wait_sbc_unchecked: LazySymbol<unsafe fn(c: *mut xcb_connection_t, drawable: xcb_drawable_t, target_sbc_hi: u32, target_sbc_lo: u32) -> xcb_dri2_wait_sbc_cookie_t>,
}
